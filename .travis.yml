dist: trusty
language: cpp
compiler:
 - g++-6
 - clang-4.0
sudo: false
os:
 - linux
 - osx
branches:
  only:
    - develop
notifications:
  email:
    recipients:
      - nialldouglas14@gmail.com

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
#    - george-edison55-precise-backports
#    - george-edison55-cmake-3.x
    - llvm-toolchain-trusty-4.0
    packages:
    - g++-6
    - clang-4.0
    - cmake
    - cmake-data
    - python-pygments

env:
# - __="Code bloat tests"
 - __="Documentation" NAME=TravisDocumentation
 - __="cmake tests" NAME=TravisLinuxWorker
 - __="cmake tests osx" NAME=TravisOSXWorker
 
matrix:
  exclude:
  - os: osx
    compiler: g++-6
  - os: linux
    compiler: clang-4.0
    env: __="Documentation" NAME=TravisDocumentation
  - os: linux
    env: __="cmake tests osx" NAME=TravisOSXWorker
#  - os: osx
#    env: __="Code bloat tests"
  - os: osx
    env: __="Documentation" NAME=TravisDocumentation
  - os: osx
    env: __="cmake tests" NAME=TravisLinuxWorker
 
cache:
  apt: true
  directories:
    - hugo_bin
#    - llvm-3.9.1
    
before_install:
# -
#    LLVM_VERSION=3.9.1;
#    if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
#      if [ -z "$(ls -A llvm-$LLVM_VERSION)" ]; then
#        wget -O llvm-$LLVM_VERSION.tar.xz http://llvm.org/releases/$LLVM_VERSION/clang+llvm-$LLVM_VERSION-x86_64-linux-gnu-debian8.tar.xz;
#        mkdir llvm-$LLVM_VERSION;
#        xzcat llvm-$LLVM_VERSION.tar.xz | tar -xvf - --strip 1 -C llvm-$LLVM_VERSION;
#        cd llvm-$LLVM_VERSION/bin;
#        ln -s clang-3.9 clang++-3.9;
#        cd ../..;
#      fi;
#      llvm-$LLVM_VERSION/bin/llvm-config --version;
#      export LLVM_CONFIG="llvm-$LLVM_VERSION/bin/llvm-config";
#      export PATH="$PWD/llvm-$LLVM_VERSION/bin:$PATH";
#    fi
 - if [ "$__" = "Documentation" ]; then
     if [ ! -f "hugo_bin/hugo" ]; then
       wget -O hugo.tar.gz https://github.com/gohugoio/hugo/releases/download/v0.24.1/hugo_0.24.1_Linux-64bit.tar.gz;
       mkdir hugo_bin;
       tar xf hugo.tar.gz -C hugo_bin;
     fi;
     ls -l hugo_bin;
     export PATH=$PATH:`pwd`/hugo_bin;
   fi

script:
 -
   if [ "$__" = "Code bloat tests" ]; then
     cd test/constexprs;
     ./compile_and_count.py;
     cat results.posix.xml;
     if grep -q "failure message" results.posix.xml; then
       exit 1;
     fi;
   fi
 -
   if [ "$__" = "cmake tests" ]; then
     echo $CXX;
     ctest -S .ci.cmake -V;
   fi
 -
   if [ "$__" = "cmake tests osx" ]; then
     CXX=clang ctest -S .ci.cmake -V -E "noexcept|error_code_extended";
   fi
 -
   if [ "$__" = "Documentation" ]; then
     git config --global push.default simple;
     git config --global user.name "Jenkins nedprod CI";
     git config --global user.email "foo@nowhere";
     cd doc/html;
     git checkout gh-pages;
     cd ../..;
     ctest -S .docs.cmake -V;
     cd doc/html;
     git add . || true;
     git commit -a -m "Travis CI updates documentation" || true;
     git push -f https://jenkins-nedprod:$JENKINS_NEDPROD_PASSWORD@github.com/ned14/outcome gh-pages;
     cd ../..;
   fi
 
after_success:
 - bash -x ./update_coveralls.sh `pwd`

after_failure:
