language: cpp
sudo: false
os:
 - linux
branches:
  only:
    - master
notifications:
  email:
    recipients:
      - nialldouglas14@gmail.com

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - george-edison55-precise-backports
#    - llvm-toolchain-precise-3.8  ## not currently working due to bad source signing key
    packages:
    - g++-6
    - python3
    - cmake
    - cmake-data
    - doxygen

env:
 - __="Unit tests"
 - __="Code bloat tests"
 - __="cmake tests" NAME=TravisLinuxWorker
 - __="Documentation" NAME=TravisDocumentation
 
cache:
  apt: true
  directories:
    - llvm-3.8.0
    
before_install:
 -
    LLVM_VERSION=3.8.0;
    if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
      if [ -z "$(ls -A llvm-$LLVM_VERSION)" ]; then
        wget -O llvm-$LLVM_VERSION.tar.xz http://llvm.org/releases/$LLVM_VERSION/clang+llvm-$LLVM_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz;
        mkdir llvm-$LLVM_VERSION;
        xzcat llvm-$LLVM_VERSION.tar.xz | tar -xvf - --strip 1 -C llvm-$LLVM_VERSION;
        cd llvm-$LLVM_VERSION/bin;
        ln -s clang-3.8 clang++-3.8;
        cd ../..;
      fi;
      llvm-$LLVM_VERSION/bin/llvm-config --version;
      export LLVM_CONFIG="llvm-$LLVM_VERSION/bin/llvm-config";
      export PATH="$PWD/llvm-$LLVM_VERSION/bin:$PATH";
    fi
 - git checkout master
 - git submodule update --init --recursive

script:
 -
   if [ "$__" = "Unit tests" ]; then
     tar cfJ outcome.tar.xz . --exclude llvm* --exclude outcome.tar.xz --exclude .git;
     cd test;
     BUILD_EXTRA=1 CXX=g++-6 ./withgcc.sh;
     ./unittests_1 || exit 1;
     ./unittests_coverage || exit 1;
     curl -T outcome.tar.xz -uned14:$BINTRAY_API_KEY https://api.bintray.com/content/ned14/generic/Boost.Outcome/v1.0/Boost.Outcome_source_`date +%Y%m%d%H%H`.tar.xz;
   fi
 -
   if [ "$__" = "Code bloat tests" ]; then
     cd test/constexprs;
     ./with_clang_gcc.sh;
     cat results.xml;
     if grep -q "failure message" results.xml; then
       exit 1;
     fi;
   fi
 -
   if [ "$__" = "cmake tests" ]; then
     CXX=g++-6 ctest -S .ci.cmake -V;
   fi
 -
   if [ "$__" = "Documentation" ]; then
     git config --global push.default simple;
     git config --global user.name "Jenkins nedprod CI";
     git config --global user.email "foo@nowhere";
     cd doc/html;
     git checkout gh-pages;
     cd ../..;
     CXX=g++-6 ctest -S .docs.cmake -V;
     cd doc/html;
     git commit -a -m "upd" && git push -f https://jenkins-nedprod:$JENKINS_NEDPROD_PASSWORD@github.com/ned14/boost.outcome gh-pages;
     cd ../..;
   fi
 
after_success:
 - bash -x ./update_coveralls.sh `pwd`

after_failure:
